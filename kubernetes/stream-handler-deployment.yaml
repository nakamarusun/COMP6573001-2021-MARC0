apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -o kubernetes/
    kompose.image-pull-policy: IfNotPresent
    kompose.version: 1.26.1 (a9d05d509)
  creationTimestamp: null
  labels:
    io.kompose.service: stream-handler
  name: stream-handler
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: stream-handler
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -o kubernetes/
        kompose.image-pull-policy: IfNotPresent
        kompose.version: 1.26.1 (a9d05d509)
      creationTimestamp: null
      labels:
        io.kompose.service: stream-handler
    spec:
      containers:
        - env:
            - name: PORT
              value: "80"
            # Puts the stream key into the container in env
            - name: GOOGLE_APPLICATION_CREDENTIALS
              value: /var/secrets/google/stream-key.json
          image: stream-handler
          imagePullPolicy: IfNotPresent
          name: stream-handler
          ports:
            - containerPort: 80
          resources: {}
          volumeMounts:
            - mountPath: /streamer_module/tmp/rec
              name: recdir
              # Create the volume where the stream key will be placed
            - name: cred-key
              mountPath: /var/secrets/google
      restartPolicy: Always
      volumes:
        - name: recdir
          persistentVolumeClaim:
            claimName: recdir
        # This is one part that is not automatically generated. We grab the
        # google credentials from the kubectl secret storage.
        - name: cred-key
          secret:
            secretName: streamer-key
status: {}
